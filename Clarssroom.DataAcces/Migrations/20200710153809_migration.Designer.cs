// <auto-generated />
using System;
using Clarssroom.DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Classroom.DataAcces.Migrations
{
    [DbContext(typeof(ClassroomDbContext))]
    [Migration("20200710153809_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Classrooms", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Grade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HomeworkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.Property<Guid?>("StudentIdUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HomeworkId");

                    b.HasIndex("StudentIdUserId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Homework", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid?>("StudentIdUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("StudentIdUserId");

                    b.ToTable("Homeworks");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Require", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomIdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid?>("StudentIdUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomIdId");

                    b.HasIndex("StudentIdUserId");

                    b.ToTable("Requires");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Assignment", b =>
                {
                    b.HasOne("Classroom.ApplicationLogic.Models.Classrooms", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Grade", b =>
                {
                    b.HasOne("Classroom.ApplicationLogic.Models.Homework", "Homework")
                        .WithMany()
                        .HasForeignKey("HomeworkId");

                    b.HasOne("Classroom.ApplicationLogic.Models.User", "StudentId")
                        .WithMany()
                        .HasForeignKey("StudentIdUserId");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Homework", b =>
                {
                    b.HasOne("Classroom.ApplicationLogic.Models.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId");

                    b.HasOne("Classroom.ApplicationLogic.Models.User", "StudentId")
                        .WithMany()
                        .HasForeignKey("StudentIdUserId");
                });

            modelBuilder.Entity("Classroom.ApplicationLogic.Models.Require", b =>
                {
                    b.HasOne("Classroom.ApplicationLogic.Models.Classrooms", "ClassroomId")
                        .WithMany()
                        .HasForeignKey("ClassroomIdId");

                    b.HasOne("Classroom.ApplicationLogic.Models.User", "StudentId")
                        .WithMany()
                        .HasForeignKey("StudentIdUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
