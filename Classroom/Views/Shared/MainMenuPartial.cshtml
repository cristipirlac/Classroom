@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
    <ul class="navbar-nav">
        @{ if (signInManager.IsSignedIn(User))
            {

                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity.Name!</a>
                </li>
                var user = await userManager.GetUserAsync(User);
                if (await userManager.IsInRoleAsync(user, "Teacher"))
                {
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-action="CreateClassroom" asp-controller="Classroom">Create Class</a>
                    </li>
                }
                <li class="nav-item">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                    </form>
                </li>

            }

            else
            {

                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
                </li>
            }
        }

    </ul>

